name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - name: Install dependencies (Backend)
      working-directory: ./backend
      run: npm install

    - name: Install dependencies (Frontend)
      working-directory: ./frontend
      run: npm install

    - name: Build Backend
      working-directory: ./backend
      run: npm run build

    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build

    - name: Run Backend Tests
      working-directory: ./backend
      run: npm test

    - name: Run Frontend Tests
      working-directory: ./frontend
      run: npm test

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.6.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Build Docker images
      run: docker-compose build

  approvals:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: ${{ github.event.pull_request.merged == false }}

    steps:
    - name: Require approval
      uses: hmarr/auto-approve-action@v2.0.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: approvals
    if: ${{ github.event.pull_request.merged == false }}

    steps:
    - name: Merge PR
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const pull_number = context.payload.pull_request.number;
          const { data: pullRequest } = await github.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number,
          });

          if (pullRequest.approved) {
            await github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number,
              merge_method: 'merge',
            });
          } else {
            core.setFailed('PR must be approved before merging.');
          }
